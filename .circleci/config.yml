# Elixir CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-elixir/ for more details
version: 2
jobs:
  build_test:
    working_directory: ~/code
    docker:
    - image: circleci/elixir:1.9
    environment:
    - MIX_ENV: test
    steps:
    - checkout
    - restore_cache:
        key: v4-test-{{ checksum "mix.lock" }}
        paths:
        - _build/test
        - deps
    - run:
        name: Setup hex
        command: |
          mix local.hex --force
          mix local.rebar --force
          mix deps.get
          mix compile --warnings-as-errors
    - save_cache:
        key: v4-test-{{ checksum "mix.lock" }}
        paths:
        - _build/test
        - deps
  build_dev:
    working_directory: ~/code
    docker:
    - image: circleci/elixir:1.9
    steps:
    - checkout
    - restore_cache:
        key: v4-dev-{{ checksum "mix.lock" }}
        paths:
        - _build/dev
        - deps
    - run:
        name: Setup hex
        command: |
          mix local.hex --force
          mix local.rebar --force
          mix deps.get
          mix compile --warnings-as-errors
    - save_cache:
        key: v4-dev-{{ checksum "mix.lock" }}
        paths:
        - _build/dev
        - deps
  fetch_node_modules:
    working_directory: ~/code
    docker:
    - image: circleci/node:10
    steps:
    - checkout
    - restore_cache:
        key: v1-node-modules-{{ checksum "apps/client/assets/yarn.lock" }}
        paths:
        - "apps/client/assets/node_modules"
    - run:
        name: yarn install
        command: |
          cd apps/client/assets
          yarn
    - save_cache:
        key: v1-node-modules-{{ checksum "apps/client/assets/yarn.lock" }}
        paths:
        - "apps/client/assets/node_modules"

  mix_test:
    working_directory: ~/code
    docker:
    - image: circleci/elixir:1.9-node-browsers
    - image: circleci/postgres:10-alpine
      environment:
      - POSTGRES_USER: postgres
      - POSTGRES_DB: homepage_test
      - POSTGRES_PASSWORD:
    - image: circleci/redis
    environment:
    - MIX_ENV=test
    steps:
    - checkout
    - restore_cache:
        keys:
        - v4-test-{{ checksum "mix.lock" }}
        - v4-dev-{{ checksum "mix.lock" }}
        paths:
        - _build/dev
        - _build/test
        - deps
    - run:
        name: Write twitch secret master key to file
        command: |
          echo -n $TWITCH_SECRET_MASTER_KEY > apps/twitch/config/master.key
    - run:
        name: Setup hex
        command: |
          mix local.hex --force
          mix local.rebar --force
    - run: mix deps.get
    - run:
        name: Create DB
        command: |
          mix ecto.create
          mix ecto.migrate
    - run: mix test
  yarn_lint:
    working_directory: ~/code
    docker:
    - image: circleci/node:10
    steps:
    - checkout
    - restore_cache:
        key: v1-node-modules-{{ checksum "apps/client/assets/yarn.lock" }}
        paths: ["apps/client/assets/node_modules"]
    - run:
        name: yarn lint
        command: |
          cd apps/client/assets
          yarn lint
  mix_format:
    working_directory: ~/code
    docker:
    - image: circleci/elixir:1.9
    steps:
    - checkout
    - run: mix format --check-formatted

  build_prod:
    working_directory: ~/code
    docker:
    - image: circleci/elixir:1.9
    environment:
    - MIX_ENV: prod
    steps:
    - checkout
    - restore_cache:
        key: v1-prod-{{ checksum "mix.lock" }}
        paths:
        - _build/prod
        - deps
    - run:
        name: Setup hex
        command: |
          mix local.hex --force
          mix local.rebar --force
          mix deps.get
          mix compile --warnings-as-errors
    - save_cache:
        key: v1-prod-{{ checksum "mix.lock" }}
        paths:
        - _build/prod
        - deps
  yarn_bundle_static:
    working_directory: ~/code
    docker:
    - image: circleci/node:10
    steps:
    - checkout
    - restore_cache:
        key: v1-node-modules-{{ checksum "apps/client/assets/yarn.lock" }}
        paths: ["apps/client/assets/node_modules"]
    - run:
        name: yarn bundle:static
        command: |
          cd apps/client/assets
          yarn bundle:static
  yarn_bundle_react:
    working_directory: ~/code
    docker:
    - image: circleci/node:10
    steps:
    - checkout
    - restore_cache:
        key: v1-node-modules-{{ checksum "apps/client/assets/yarn.lock" }}
        paths: ["apps/client/assets/node_modules"]
    - run:
        name: yarn bundle:react
        command: |
          cd apps/client/assets
          yarn bundle:react

workflows:
  version: 2
  workflow:
    jobs:
    - build_test
    - build_dev
    - build_prod
    - fetch_node_modules

    - mix_test:
        requires: ["build_test"]
    - mix_format:
        requires: ["build_dev"]
    - yarn_lint:
        requires: ["fetch_node_modules"]
    - yarn_bundle_react:
        requires: ["fetch_node_modules"]
    - yarn_bundle_static:
        requires: ["fetch_node_modules"]
