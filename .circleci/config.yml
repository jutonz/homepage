# Elixir CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-elixir/ for more details
version: 2
jobs:
  mix_deps_get:
    working_directory: ~/code
    docker:
    - image: circleci/elixir:1.10
    steps:
    - checkout
    - restore_cache:
        key: v1-mix-{{ checksum ".tool-versions" }}-{{ checksum "mix.lock" }}
    - run:
        name: Setup hex
        command: |
          mix local.hex --force
          mix local.rebar --force
    - run: mix deps.get
    - save_cache:
        key: v1-mix-{{ checksum ".tool-versions" }}-{{ checksum "mix.lock" }}
        paths:
        - deps
  build_test:
    working_directory: ~/code
    docker:
    - image: circleci/elixir:1.10
    environment:
    - MIX_ENV: test
    steps:
    - checkout
    - restore_cache:
        name: Restore mix deps
        key: v1-mix-{{ checksum ".tool-versions" }}-{{ checksum "mix.lock" }}
    - restore_cache:
        name: Restore compiled test deps
        key: v7-test-{{ checksum ".tool-versions" }}-{{ checksum "mix.lock" }}
    - run:
        name: Setup hex
        command: |
          mix local.hex --force
          mix local.rebar --force
    - run:
        name: Touch files
        command: |
          find _build/** -type f -exec touch {} + || true
          find deps/** -type f -exec touch {} + || true
    - run: mix deps.compile
    - run: mix compile --warnings-as-errors
    - save_cache:
        key: v7-test-{{ checksum ".tool-versions" }}-{{ checksum "mix.lock" }}
        paths:
        - _build/test
        - deps
  build_dev:
    working_directory: ~/code
    docker:
    - image: circleci/elixir:1.10
    steps:
    - checkout
    - restore_cache:
        name: Restore mix deps
        key: v1-mix-{{ checksum ".tool-versions" }}-{{ checksum "mix.lock" }}
    - restore_cache:
        name: Restore compiled deps
        key: v9-dev-{{ checksum ".tool-versions" }}-{{ checksum "mix.lock" }}
    - restore_cache:
        name: Restore PLT's
        keys:
        - v2-plts-{{ checksum ".tool-versions" }}-{{ checksum "mix.lock" }}
        - v2-plts-{{ checksum ".tool-versions" }}-
    - run:
        name: Setup hex
        command: |
          mix local.hex --force
          mix local.rebar --force
    - run:
        name: Touch files
        command: |
          find _build/** -type f -exec touch {} + || true
          find deps/** -type f -exec touch {} + || true
    - run: mix deps.compile
    - run: mix compile --warnings-as-errors
    - run:
        name: Build PLT's
        command: |
          mix dialyzer_pre
          ls -alh _plts
          mix dialyzer.build
          ls -alh _plts
    - save_cache:
        key: v9-dev-{{ checksum ".tool-versions" }}-{{ checksum "mix.lock" }}
        paths:
        - _build/dev
        - deps
    - save_cache:
        key: v2-plts-{{ checksum ".tool-versions" }}-{{ checksum "mix.lock" }}
        paths:
        - _plts

  yarn_install_and_lint:
    working_directory: ~/code
    docker:
    - image: circleci/node:12
    steps:
    - checkout
    - restore_cache:
        name: Restore node_modules cache
        key: v2-npm-{{ checksum ".tool-versions" }}-{{ checksum "apps/client/assets/yarn.lock" }}
    - restore_cache:
        name: Restore yarn cache
        key: v1-yarn-{{ checksum ".tool-versions" }}-{{ checksum "apps/client/assets/yarn.lock" }}
    - run:
        name: yarn install
        command: |
          cd ~/code/apps/client/assets
          yarn install
    - run:
        name: yarn lint
        command: |
          cd ~/code/apps/client/assets
          yarn lint
    - save_cache:
        name: Save node_modules cache
        key: v2-npm-{{ checksum ".tool-versions" }}-{{ checksum "apps/client/assets/yarn.lock" }}
        paths:
        - apps/client/assets/node_modules
    - save_cache:
        name: Save yarn cache
        key: v1-yarn-{{ checksum ".tool-versions" }}-{{ checksum "apps/client/assets/yarn.lock" }}
        paths:
        - ~/.cache/yarn
  mix_test:
    working_directory: ~/code
    docker:
    - image: circleci/elixir:1.10-node-browsers
    - image: circleci/postgres:12-alpine
      environment:
      - POSTGRES_USER: postgres
      - POSTGRES_DB: homepage_test
      - POSTGRES_PASSWORD:
    - image: circleci/redis
    environment:
    - MIX_ENV=test
    steps:
    - checkout
    - restore_cache:
        key: v7-test-{{ checksum ".tool-versions" }}-{{ checksum "mix.lock" }}
        name: Restore test deps
    - restore_cache:
        key: v1-prod-static-assets-{{ .Revision }}
        name: Restore static assets
    - restore_cache:
        name: Restore node_modules cache
        key: v2-npm-{{ checksum ".tool-versions" }}-{{ checksum "apps/client/assets/yarn.lock" }}
    - run:
        name: Write twitch secret master key to file
        command: |
          echo -n $TWITCH_SECRET_MASTER_KEY > apps/twitch/config/master.key
    - run:
        name: Setup hex
        command: |
          mix local.hex --force
          mix local.rebar --force
    - run: mix deps.get
    - run:
        name: Create DB
        command: mix do ecto.create, ecto.migrate
    - run:
        name: mix test
        command: mix test
    - store_artifacts:
        path: /tmp/homepage-screenshots
        destination: acceptance-screenshots
  mix_format:
    working_directory: ~/code
    docker:
    - image: circleci/elixir:1.10
    steps:
    - checkout
    - run: mix format --check-formatted
  mix_dialyzer:
    working_directory: ~/code
    docker:
    - image: circleci/elixir:1.10
    steps:
    - checkout
    - restore_cache:
        name: Restore PLT's
        keys:
        - v2-plts-{{ checksum ".tool-versions" }}-{{ checksum "mix.lock" }}
        - v2-plts-{{ checksum ".tool-versions" }}-
    - restore_cache:
        name: Restore compiled deps
        key: v9-dev-{{ checksum ".tool-versions" }}-{{ checksum "mix.lock" }}
    - run:
        name: Setup hex
        command: |
          mix local.hex --force
          mix local.rebar --force
    - run: mix dialyzer

  build_prod:
    working_directory: ~/code
    docker:
    - image: circleci/elixir:1.10
    environment:
    - MIX_ENV: prod
    steps:
    - checkout
    - restore_cache:
        name: Restore mix deps
        key: v1-mix-{{ checksum ".tool-versions" }}-{{ checksum "mix.lock" }}
    - restore_cache:
        name: Restore compiled deps
        key: v3-prod-{{ checksum ".tool-versions" }}-{{ checksum "mix.lock" }}
    - run:
        name: Setup hex
        command: |
          mix local.hex --force
          mix local.rebar --force
    - run:
        name: Touch files
        command: |
          find _build/** -type f -exec touch {} + || true
          find deps/** -type f -exec touch {} + || true
    - run: mix deps.compile
    - run: mix compile --warnings-as-errors
    - save_cache:
        key: v3-prod-{{ checksum ".tool-versions" }}-{{ checksum "mix.lock" }}
        paths:
        - _build/prod
        - deps
  yarn_bundle_static:
    working_directory: ~/code
    docker:
    - image: circleci/node:12
    steps:
    - checkout
    - restore_cache:
        key: v2-npm-{{ checksum ".tool-versions" }}-{{ checksum "apps/client/assets/yarn.lock" }}
    - run:
        name: yarn bundle:static
        command: |
          cd apps/client/assets
          yarn bundle:static
    - save_cache:
        key: v1-prod-static-assets-{{ .Revision }}
        paths:
        - apps/client/priv/static/js
  yarn_bundle_react:
    working_directory: ~/code
    docker:
    - image: circleci/node:12
    steps:
    - checkout
    - restore_cache:
        key: v2-npm-{{ checksum ".tool-versions" }}-{{ checksum "apps/client/assets/yarn.lock" }}
    - run:
        name: yarn bundle:react
        command: |
          cd apps/client/assets
          yarn bundle:react

workflows:
  version: 2
  workflow:
    jobs:
    - mix_deps_get
    - build_test:
        requires: ["mix_deps_get"]
    - build_dev:
        requires: ["mix_deps_get"]
    - build_prod:
        requires: ["mix_deps_get"]
    - yarn_install_and_lint
    - mix_format:
        requires: ["build_dev"]
    - mix_dialyzer:
        requires: ["build_dev"]
    - yarn_bundle_react:
        requires: ["yarn_install_and_lint"]
    - yarn_bundle_static:
        requires: ["yarn_install_and_lint"]
    - mix_test:
        requires: ["build_test", "yarn_bundle_static"]
